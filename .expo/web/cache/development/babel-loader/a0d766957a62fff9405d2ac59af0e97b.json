{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { StatusBar } from 'expo-status-bar';\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nexport default function EmailList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      EmailList = _useState2[0],\n      setEmailList = _useState2[1];\n\n  useEffect(function () {\n    function getData() {\n      var response, EmailList;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://mobile.ect.ufrn.br:3002/emails'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              EmailList = _context.sent;\n              setEmailList(EmailList);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getData();\n  }, []);\n\n  function estrela(star) {\n    if (star) {\n      return React.createElement(FontAwesome5, {\n        name: \"star\",\n        solid: true,\n        size: 26,\n        color: \"#FFC300\"\n      });\n    } else {\n      return React.createElement(FontAwesome5, {\n        name: \"star\",\n        size: 26,\n        color: \"#FFC300\"\n      });\n    }\n  }\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      style: styles.list,\n      onPress: function onPress() {\n        return navigation.navigate('email', {\n          id: item.id\n        });\n      }\n    }, React.createElement(Image, {\n      style: styles.ImgPerfil,\n      source: {\n        uri: item.picture\n      }\n    }), React.createElement(View, {\n      style: styles.header\n    }, React.createElement(View, {\n      style: styles.txt\n    }, React.createElement(Text, {\n      style: styles.emailTit\n    }, item.to), React.createElement(Text, {\n      style: styles.emailTit\n    }, item.tittle)), React.createElement(View, {\n      style: styles.fav\n    }, React.createElement(Text, {\n      style: styles.time\n    }, item.time), estrela(item.star))));\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(StatusBar, {\n    style: \"auto\"\n  }), React.createElement(FlatList, {\n    data: EmailList,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    showsHorizontalScrollIndicator: false\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f7f7f7',\n    marginTop: 30\n  },\n  fav: {\n    alignItems: 'flex-end',\n    justifyContent: 'space-between'\n  },\n  list: {\n    flexDirection: 'row',\n    height: 80,\n    marginBottom: 10,\n    paddingBottom: 10,\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'lightgray'\n  },\n  ImgPerfil: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    margin: 10\n  },\n  txt: {\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  emailTit: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  header: {\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Pedro Paulo/Desktop/trabalho 1/Trabalho/screens/EmailList.js"],"names":["React","useEffect","useState","StatusBar","FlatList","TouchableOpacity","FontAwesome5","EmailList","navigation","setEmailList","getData","fetch","response","json","estrela","star","renderItem","item","styles","list","navigate","id","ImgPerfil","uri","picture","header","txt","emailTit","to","tittle","fav","time","container","StyleSheet","create","flex","backgroundColor","marginTop","alignItems","justifyContent","flexDirection","height","marginBottom","paddingBottom","borderBottomWidth","borderBottomColor","width","borderRadius","margin","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {View,Text, StyleSheet,Image} from 'react-native'\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { FontAwesome5 } from '@expo/vector-icons'\r\n\r\n\r\n\r\nexport default function EmailList({navigation}) {\r\n    const [EmailList,setEmailList] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        async function getData(){\r\n            const response = await fetch('https://mobile.ect.ufrn.br:3002/emails')\r\n            const EmailList = await response.json();\r\n            setEmailList(EmailList);\r\n        }\r\n        getData();\r\n    }, []);\r\n    function estrela(star){\r\n        if(star){\r\n            return(<FontAwesome5 name='star' solid size={26} color='#FFC300'/>)\r\n        }else{\r\n            return(<FontAwesome5 name='star' size={26} color='#FFC300'/>)\r\n        }\r\n    }\r\n\r\n    function renderItem({item}){\r\n        return <TouchableOpacity style = {styles.list} onPress={()=> navigation.navigate('email', {id: item.id })}>\r\n            <Image style={styles.ImgPerfil} source = {{uri: item.picture}}/>\r\n            <View style = {styles.header}>\r\n                <View style = {styles.txt}>\r\n                    <Text style = {styles.emailTit}>{item.to}</Text>\r\n                    <Text style = {styles.emailTit}>{item.tittle}</Text>\r\n                </View>\r\n                <View style = {styles.fav}>\r\n                    <Text style = {styles.time}>{item.time}</Text>\r\n                    {estrela(item.star)}\r\n                </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n    }\r\n\r\n    return (\r\n      <View style = {styles.container}>\r\n        <StatusBar style=\"auto\" />\r\n        <FlatList\r\n        data = {EmailList}\r\n        renderItem = {renderItem}\r\n        keyExtractor = {item => item.id}\r\n        showsHorizontalScrollIndicator = {false}\r\n        />\r\n        \r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#f7f7f7',\r\n        marginTop: 30,\r\n    },\r\n    fav:{\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'space-between'\r\n    },\r\n    list:{\r\n        flexDirection: 'row',\r\n        height: 80,\r\n        marginBottom: 10,\r\n        paddingBottom: 10,\r\n        marginTop: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'lightgray',\r\n    },\r\n\r\n    ImgPerfil: {\r\n        width: 50,\r\n        height: 50,\r\n        borderRadius: 25,\r\n        margin: 10,\r\n    },\r\n    txt:{\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n\r\n    },  \r\n    emailTit: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n    header:{\r\n        justifyContent: 'space-between',\r\n        flexDirection: 'row',\r\n        width: '80%',\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}